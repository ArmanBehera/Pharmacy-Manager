# Generated by Django 5.0.6 on 2024-08-06 12:55

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Allergy for the medicines', max_length=255, verbose_name='Allergies')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category', max_length=255, verbose_name='Category Name')),
                ('usage_priority', models.IntegerField(help_text='Priority of this category for the medicine', verbose_name='Usage Priority')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the ingredient', max_length=255, verbose_name='Ingredient Name')),
            ],
        ),
        migrations.CreateModel(
            name='SideEffect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Description of the side effect', max_length=255, verbose_name='Side Effect')),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the medicine', max_length=255, verbose_name='Medicine Name')),
                ('stock', models.IntegerField(help_text='Stock quantity of the medicine', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock')),
                ('price', models.FloatField(help_text='Price of the medicine', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Price')),
                ('description', models.TextField(blank=True, help_text='Description of the medicine', null=True, verbose_name='Description')),
                ('manufacturer', models.CharField(help_text='Manufacturer of the medicine', max_length=255, verbose_name='Manufacturer')),
                ('expiration_date', models.DateField(blank=True, help_text='Expiration date of the medicine', null=True, verbose_name='Expiration Date')),
                ('allergies', models.ManyToManyField(help_text='Patients with these allergies should avoid.', to='pharmacy.allergies', verbose_name='Allergies')),
                ('categories', models.ManyToManyField(help_text='Categories of the medicine', to='pharmacy.category', verbose_name='Categories')),
                ('ingredients', models.ManyToManyField(help_text='Ingredients in the medicine', to='pharmacy.ingredient', verbose_name='Ingredients')),
                ('side_effects', models.ManyToManyField(help_text='Possible side effects of the medicine', to='pharmacy.sideeffect', verbose_name='Side Effects')),
            ],
            options={
                'verbose_name_plural': 'Medicines',
                'ordering': ['name'],
            },
        ),
    ]
